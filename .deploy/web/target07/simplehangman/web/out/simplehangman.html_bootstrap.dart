import "dart:isolate" as dD;import "dart:uri" as eD;import "dart:async" as RC;import "dart:html" as EB;import "dart:collection" as kB;class KD{static const  LD="Chrome";static const  MD="Firefox";static const  ND="Internet Explorer";static const  OD="Safari";final  GD;final  minimumVersion;const KD(this.GD,[this.minimumVersion]);}class PD{final  name;const PD(this.name);}var zB='pumpernickel';var lB=zB.split("");var mB=CC(zB.replaceAll(new RegExp('.'),'-').split(""));var dB=CC(new List());final GB=new q();var nB=''; get TB{if(n){t(GB,k.m,'guessedletter');}return nB;}set TB( g){if(CB(GB)){l(GB,k.m,'guessedletter',nB,g);}nB=g;}var oB=false; get AC{if(n){t(GB,k.m,'dead');}return oB;}set AC( g){if(CB(GB)){l(GB,k.m,'dead',oB,g);}oB=g;}var pB=false; get BC{if(n){t(GB,k.m,'won');}return pB;}set BC( g){if(CB(GB)){l(GB,k.m,'won',pB,g);}pB=g;} SC(){} TC(){const  g=7;if(lB.contains(TB)){UC();if(!mB.contains('-')){BC=true;}}else{dB.add(TB);if(dB.length==g){AC=true;}}TB='';} UC(){for(int g=0;g<lB.length;g++ ){if(lB[g]==TB){mB[g]=TB;}}} VC(){var lD=EB.document.body;final mD=new EB.InputElement(),nD=new EB.Element.html('<p>\n              <template></template>\n            </p>'),oD=new EB.Element.html('<p id="wrong">\n              <template></template>\n            </p>');var pD,qD,rD,sD;var tD=new FC(lD);pD=lD.nodes[3].nodes[1];tD.loop(pD,()=>mB,(h,g,tD){var o=h[g];var uD=tD.MC(()=>o,false);tD.addAll([new EB.Text(' '),uD,new EB.Text(' ')]);});rD=lD.nodes[5].nodes[1];tD.iB(rD,()=>!AC&&!BC,(tD){var vD,wD,xD,yD,zD;vD=mD.clone(true);tD.listen(vD.onInput,(i){TB=vD.value;});tD.listen(vD.onKeyUp,(i){i=new EB.KeyEvent(i);TC();});tD.ID(()=>TB,(j){if(vD.value!=j)vD.value=j;},false,false);xD=nD.clone(true);wD=xD.nodes[1];tD.iB(wD,()=>dB.length!=0,(tD){tD.add(new EB.Text(' Sorry! The word contains no: '));});zD=oD.clone(true);yD=zD.nodes[1];tD.loop(yD,()=>dB,(h,g,tD){var FB=h[g];var AE=tD.MC(()=>FB,false);tD.addAll([new EB.Text(' '),AE,new EB.Text(' ')]);});tD.addAll([new EB.Text('\n            Guess a letter...\n            '),vD,new EB.Text('\n            '),xD,new EB.Text('\n            '),zD,new EB.Text('\n          ')]);});sD=lD.nodes[5].nodes[3];tD.iB(sD,()=>AC,(tD){tD.add(new EB.Text(' You\'re dead! '));});qD=lD.nodes[5].nodes[5];tD.iB(qD,()=>BC,(tD){tD.add(new EB.Text(' You Win! '));});tD.bB();tD.insert();}main(){HC=true;SC();VC();}class WC<IB> extends rC with q implements List<IB>{final  BE;WC([ length]):BE=length!=null?new List<IB>(length):<IB>[] ;factory WC.fD( g)=>new WC<IB>()..addAll(g); get length{if(n)t(this,k.m,'length');return BE.length;}set length( h){var i=BE.length;if(i==h)return;if(CB(this)){if(h<i){for(int g=i-1;g>=h;g-- ){l(this,k.LB,g,BE[g],null);}l(this,k.m,'length',i,h);}else{l(this,k.m,'length',i,h);for(int g=i;g<h;g++ ){l(this,k.KB,g,null,null);}}}BE.length=h;} operator[]( g){if(n)t(this,k.BB,g);return BE[g];}operator[]=( g, h){var i=BE[g];if(CB(this)){l(this,k.BB,g,i,h);}BE[g]=h;} sublist( g,[ end])=>new WC<IB>.fD(super.sublist(g,end)); add( h){var g=BE.length;if(CB(this)){l(this,k.m,'length',g,g+1);l(this,k.KB,g,null,h);}BE.add(h);} toString(){if(n){for(int g=0;g<length;g++ ){t(this,k.BB,g);}}return BE.toString();}}typedef  UB<s,p>();class PB<s,p> extends q implements Map<s,p>{final  CE;var DE;var EE;PB({ createMap}):CE=createMap!=null?createMap():new Map<s,p>(){DE=new XC<s,p>(this);EE=new YC<s,p>(this);}factory PB.gD( i,{ createMap}){var g=new PB<s,p>(createMap:createMap);i.forEach(( h, j){g[h]=j;});return g;} get keys=>DE; get values=>EE; get length{if(n)t(this,k.m,'length');return CE.length;} get isEmpty=>length==0; FE( g)=>t(this,k.BB,g); GE(){t(this,k.m,'length');CE.keys.forEach(FE);} containsKey( g){if(n)FE(g);return CE.containsKey(g);} operator[]( g){if(n)FE(g);return CE[g];} operator[]=( h, g){var j=CE.length;var i=CE[h];CE[h]=g;if(CB(this)){if(j!=CE.length){l(this,k.m,'length',j,CE.length);l(this,k.KB,h,i,g);}else if(i!=g){l(this,k.BB,h,i,g);}}} putIfAbsent( g, j()){if(n)FE(g);var h=CE.length;var i=CE.putIfAbsent(g,j);if(CB(this)&&h!=CE.length){l(this,k.m,'length',h,CE.length);l(this,k.KB,g,null,i);}return i;} remove( g){if(n)FE(g);var h=CE.length;var i=CE.remove(g);if(CB(this)&&h!=CE.length){l(this,k.LB,g,i,null);l(this,k.m,'length',h,CE.length);}return i;} clear(){var g=CE.length;if(CB(this)&&g>0){CE.forEach((i,h){l(this,k.LB,i,h,null);});l(this,k.m,'length',g,0);}CE.clear();} forEach( g( key, value)){if(n)GE();CE.forEach(g);} toString()=>kB.Maps.mapToString(this);}class XC<s,p> extends kB.IterableBase<s>{final  CE;XC(this.CE); get iterator=>new QD<s,p>(CE);}class QD<s,p> implements Iterator<s>{final  CE;final  DE;var HE=false;QD( g):CE=g,DE=g.CE.keys.iterator; moveNext(){if(n)t(CE,k.m,'length');return HE=DE.moveNext();} get current{var g=DE.current;if(n&&HE)CE.FE(g);return g;}}class YC<s,p> extends kB.IterableBase<p>{final  CE;YC(this.CE); get iterator=>new RD<s,p>(CE);}class RD<s,p> implements Iterator<p>{final  CE;final  DE;final  EE;var HE;RD( g):CE=g,DE=g.CE.keys.iterator,EE=g.CE.values.iterator; moveNext(){if(n)t(CE,k.m,'length');var h=DE.moveNext();var g=EE.moveNext();if(h!=g){throw new StateError('keys and values should be the same length');}return HE=g;} get current{if(n&&HE)CE.FE(DE.current);return EE.current;}}typedef  HB( e);typedef  ZC( changes);typedef  JB();typedef  aC();class eB{final oldValue;final newValue;final  changes;eB(this.oldValue,this.newValue,[this.changes]); operator==(g){return g is eB&&oldValue==g.oldValue&&newValue==g.newValue&&changes==g.changes;} get hashCode=>nC(oldValue,newValue,changes); toString(){if(changes!=null)return '#<ChangeNotification to ${newValue}: ${changes}>';return '#<ChangeNotification from ${oldValue} to ${newValue}>';}}class k{static const m=1;static const BB=2;static const KB=BB|4;static const LB=BB|8;final  type;final key;final oldValue;final newValue;k(this.type,this.key,this.oldValue,this.newValue); operator==(g){return g is k&&type==g.type&&key==g.key&&oldValue==g.oldValue&&newValue==g.newValue;} get hashCode=>oC(type,key,oldValue,newValue); toString(){var g;switch (type){case m:g='field';break;case BB:g='index';break;case KB:g='insert';break;case LB:g='remove';break;}return '#<ChangeRecord ${g} ${key} from ${oldValue} to ${newValue}>';}} bC(g, i,[ debugName]){if(g is q){var h=g;return qB(h,(o){i(new eB(h,h,o));});}var j=new fB(g,i,debugName);if(!j.IE()){return dC;}return j.JE;} qB( g, i){if(g.SB==null)g.SB=new rB();var h=g.SB.add(i);return h.remove;}CC(g){if(g is Map){var h=null;if(g is kB.SplayTreeMap){h=()=>new kB.SplayTreeMap();}else if(g is kB.LinkedHashMap){h=()=>new kB.LinkedHashMap();}return new PB.gD(g,createMap:h);}if(g is Set)return new EC.hD(g);if(g is Iterable)return new WC.fD(g);return g;}class q{var SB;var RB;final  hashCode= ++q.cC;static var cC=0;} CB( g)=>g.SB!=null&&g.SB.head!=null; get n=>QB!=null; t( g, h,i)=>QB.KE(g,h,i); l( g, j,o, h, i){if((j&(k.KB|k.LB))==0){if(h==i)return;}if(MB==null){MB=[] ;pC(eC);}if(g.RB==null){g.RB=[] ;MB.add(g);}g.RB.add(new k(j,o,h,i));} dC(){}var QB;var DC=100;var MB;var NB; eC(){var FB=0;while (MB!=null||NB!=null){var j=MB;MB=null;var i=NB;NB=null;if(FB++ ==DC){fC(j,i);return;}if(j!=null){for(var h in j){var cB=h.RB;h.RB=null;for(var g=h.SB.head;g!=null;g=g.next){var o=g.value;try {o(cB);}catch (yB,OB){VB(yB,OB,o,'from ${h}');}}}}if(i!=null){i.forEach((cD,JD){JD.LE();});}}} fC( o, j){var g=[] ;if(o!=null){for(var i in o){var cB=i.RB;g.add('${i} ${cB}');}}if(j!=null){for(var FB in j.values){var h=FB.LE();if(h!=null)g.add('${FB} ${h}');}}MB=null;NB=null;var OB='exceeded notifiction limit of ${DC}, possible ' 'circular reference in observer callbacks: ${g.take(10).join(", ")}';iC(OB);}class fB{static var gC=0;final  ME= ++fB.gC;final  NE;final  OE;final  PE;final  QE=new Map();final  RE=[] ;var SE=false;var TE;fB(this.NE,this.OE,this.PE); toString()=>PE!=null?'<observer ${ME}: ${PE}>':'<observer ${ME}>'; IE(){var h=QB;QB=this;try {TE=NE();if(TE is Iterable&&TE is !List&&TE is !q){TE=(TE as Iterable).toList();}}catch (g,i){VB(g,i,NE,'from ${this}');TE=null;}QE.forEach(UE);QE.clear();assert(QB==this);QB=h;VE();return RE.length>0;} WE( i){try {OE(i);}catch (g,h){VB(g,h,OE,'from ${this}');}} VE(){var g=TE;if(g is !q)return;RE.add(qB(g,(h){WE(new eB(g,g,h));}));} KE( FB, OB,g){var i=QE.putIfAbsent(FB,()=>new Map());try {var h=i[g];if(h==null)h=0;i[g]=h|OB;}catch (j,o){VB(j,o,g,'hashCode or operator == from ${this}');}} UE( i, j){RE.add(qB(i,(o){if(SE)return;for(var g in o){var h=j[g.key];if(h!=null&&(h&g.type)!=0){SE=true;if(NB==null){NB=new kB.SplayTreeMap();}NB[ME]=this;return;}}}));} JE(){for(var g in RE){g();}SE=false;} LE(){if(!SE)return null;var g=TE;JE();IE();try {if(g==TE)return null;}catch (i,j){VB(i,j,g,'operator == from ${this}');return null;}var h=new eB(g,TE);WE(h);return h;}}typedef  hC( message);var iC=(g)=>print(g);typedef  jC(error,stackTrace,obj, message);var VB=kC; kC(i,g,h, j){print('web_ui.observe: unhandled error calling ${h} ${j}.\n' 'error:\n${i}\n\nstack trace:\n${g}');}class EC<DB> extends qC with q implements Set<DB>{final  XE;final  YE;EC({ createMap}):XE=createMap!=null?createMap():new Map<DB,Object>(),YE=createMap;factory EC.hD( g,{ createMap}){return new EC<DB>(createMap:createMap)..addAll(g);} contains( g){if(n)t(this,k.BB,g);return XE.containsKey(g);} add( g){var h=XE.length;XE[g]=const Object();if(h!=XE.length){l(this,k.m,'length',h,XE.length);l(this,k.KB,g,null,g);}} remove( g){if(n)t(this,k.BB,g);var h=XE.length;XE.remove(g);if(h!=XE.length){if(CB(this)){l(this,k.LB,g,g,null);l(this,k.m,'length',h,XE.length);}return true;}return false;} clear(){if(CB(this)){for(var g in XE.keys){l(this,k.LB,g,g,null);}l(this,k.m,'length',XE.length,0);}XE.clear();} get length{if(n)t(this,k.m,'length');return XE.length;} get isEmpty=>length==0; get iterator=>new SD<DB>(this); addAll( g)=>g.forEach(add); toString(){if(n){for(DB g in XE.keys){t(this,k.BB,g);}}return XE.keys.toSet().toString();}}class SD<DB> implements Iterator<DB>{final  ZE;final  aE;var bE=false;SD( g):ZE=g,aE=g.XE.keys.iterator; moveNext(){ZE.length;return bE=aE.moveNext();} get current{var g=aE.current;if(n&&bE)t(ZE,k.BB,g);return g;}}class lC{lC();}class mC{mC();}class w<AB>{var cE;var dE;var eE;var fE;w.iD( g,this.eE):fE=g{if(eE!=null)eE.gE++ ;} get next=>dE; get value=>fE;set value( g)=>fE=g; hE( g, h){dE=h;cE=g;if(g!=null)g.dE=this;if(h!=null)h.cE=this;return this;} append( g)=>new w<AB>.iD(g,eE).hE(this,dE); remove(){if(eE==null)return;eE.gE-- ;if(cE!=null){cE.dE=dE;}else{eE.iE=dE;}if(dE!=null){dE.cE=cE;}else{eE.jE=cE;}dE=null;cE=null;eE=null;}}class rB<AB> extends kB.IterableBase<AB>{var iE;var jE; get length=>gE;var gE=0;rB(){} get head=>iE; add( h){var g=new w<AB>.iD(h,this);if(jE==null)return iE=jE=g;return jE=g.hE(jE,null);} addLast( g)=>add(g); addAll( g)=>g.forEach(add); get iterator=>new TD<AB>(this);}class TD<AB> implements Iterator<AB>{var kE;var eE;var lE;var mE=-1;TD(this.eE){kE=new List<w>(eE.length);var h=0;var g=eE.head;while (g!=null){kE[h++ ]=g;g=g.next;}} get current=>lE; moveNext(){do{mE++ ;}while(mE<kE.length&&kE[mE].eE!=eE);if(mE<kE.length){lE=kE[mE].value;return true;}else{lE=null;return false;}}}WB(h,g)=>h.hashCode*31+g.hashCode;nC(h,g,i)=>WB(WB(h,g),i);oC(g,i,h,j)=>WB(WB(g,i),WB(h,j)); pC( h()){var g=new dD.ReceivePort();g.receive((i,j){g.close();h();});g.toSendPort().send(null);}abstract class qC extends kB.IterableBase<dynamic>{}abstract class rC extends kB.ListMixin<dynamic>{} sC(h, g,[ stringValue]){var i=h is lC;if(stringValue==null){stringValue=h.toString();}if(!i&&g is EB.Text){g.text=stringValue;}else{var j=g;g=i?new EB.Element.html(stringValue):new EB.Text(stringValue);j.replaceWith(g);}return g;} tC(g){if(g is mC)return g.toString();g=g.toString();return vC(g)?g:'#';}const uC=const["http","https","ftp","mailto"]; vC( h){var g=new eD.Uri(h).scheme;if(g=='')return true;return uC.contains(g.toLowerCase())||"MAILTO"==g.toUpperCase();}abstract class XB{ bB(){} insert(); remove();}class UD extends XB{final  NC;var nE;final  listener;UD(this.NC,this.listener); insert(){nE=NC.listen(listener);} remove(){nE.cancel();nE=null;}}class VD extends XB{final exp;final  action;final  isFinal;var u;VD(this.exp,this.action,this.isFinal); insert(){if(isFinal){action(new eB(null,exp()));}else if(u!=null){throw new StateError('binding already attached');}else{u=gB(exp,action,'generic-binding');}} remove(){if(!isFinal){u();u=null;}}}class WD extends XB{final  QC;final  wB;final  OC;final  isFinal;var u;WD(this.wB,this.QC,this.OC,this.isFinal); oE(g){QC(OC?tC(g):g);} insert(){if(isFinal){oE(wB());}else if(u!=null){throw new StateError('data binding already attached.');}else{u=gB(wB,(g)=>oE(g.newValue),'dom-property-binding');}} remove(){if(!isFinal){u();u=null;}}}class FC extends XB{final  xB;final  children=[] ;final  nodes=[] ;FC(this.xB); listen( i, h){children.add(new UD(i,(g){h(g);BD();}));} MC( h,i){var g=new EB.Text('');children.add(new VD(()=>'${h()}',(j){g=sC(h(),g,j.newValue);},i));return g;} ID(g,i,h,[isUrl=false]){children.add(new WD(g,i,isUrl,h));} iB( h,g,i){children.add(new xC(h,g,i));} loop( h,g,i){children.add(new XD(h,g,i));} add( g)=>nodes.add(g); addAll( g)=>nodes.addAll(g); bB(){for(var g=0,h=children.length;g<h;g++ ){children[g].bB();}} insert(){for(var g=0,h=children.length;g<h;g++ ){children[g].insert();}} remove(){for(var g=children.length-1;g>=0;g-- ){children[g].remove();}children.clear();}}abstract class GC extends FC{final exp;var u;GC( g,this.exp):super(g); bB(){} insert(){super.bB();if(nodes.length>0){var i=xB.parentNode;var j=xB.nextNode;for(var g=0,h=nodes.length;g<h;g++ ){i.insertBefore(nodes[g],j);}}super.insert();} remove(){super.remove();for(var g=nodes.length-1;g>=0;g-- ){nodes[g].remove();}nodes.clear();}}typedef  wC( template);class xC extends GC{var jB=false;final  LC;xC( h,g,this.LC):super(h,g); insert(){u=gB(exp,(g){if(!jB&&g.newValue){LC(this);super.insert();jB=true;}else if(jB&&!g.newValue){super.remove();jB=false;}},'conditional-binding');} remove(){super.remove();u();u=null;}}typedef  yC( list, index, template);class XD extends GC{final  PC;XD( h,g,this.PC):super(h,g); insert(){u=gB(exp,(i){super.remove();var h=i.newValue;for(int g=0;g<h.length;g++ ){PC(h,g,this);}super.insert();},'loop-binding');} remove(){super.remove();u();u=null;}}var HC=false; zC(g, o,[ debugName]){if(HC)return bC(g,o);if(o==null)return (){};if(YB==null)YB=new rB<ZB>();var i;var h=v.FD;if(g is KC){i=(g as KC).pE;}else if(g is Function){i=g;try {var j=g();if(j is List){h=v.aB;}else if(j is Iterable){h=v.aB;i=()=>g().toList();}else if((j is kB.LinkedHashMap)||(j is kB.SplayTreeMap)){h=v.uB;}else if(j is Map){h=v.tB;}}catch (FB,yB){print('error: evaluating ${debugName!=null?debugName:"<unnamed>"} ' 'watcher threw error (${FB}, ${yB})');}}else if(g is List){i=()=>g;h=v.aB;}else if(g is Iterable){i=()=>g.toList();h=v.aB;}else if((g is kB.LinkedHashMap)||(g is kB.SplayTreeMap)){i=()=>g;h=v.uB;}else if(g is Map){i=()=>g;h=v.tB;}var OB=AD(h,i,o,debugName);var cB=YB.add(OB);return cB.remove;} AD( j, g, i, h){switch (j){case v.aB:return new YD(g,i,h);case v.uB:return new aD(g,i,h);case v.tB:return new ZD(g,i,h);default:return new ZB(g,i,h);}} gB(h,i,[debugName]){var j=zC(h,i,debugName);var g=h;if(g is Function){g=g();}if(g is Iterable&&g is !List){g=g.toList();}i(new eB(null,g));return j;}var YB;class ZB{final  vB;final  pE;final  qE;var rE;ZB(this.pE,this.qE,this.vB){rE=pE();} toString()=>vB==null?'<unnamed>':vB; HD(){var g=sE();if(tE(g)){var h=rE;uE(g);qE(new eB(h,g));return true;}return false;} tE(g)=>rE!=g; uE(g){rE=g;}sE(){try {return pE();}catch (g,h){print('error: evaluating ${this} watcher threw an exception (${g}, ${h})');}return rE;}}final  IC=10; BD(){if(YB==null)return;var g;var h=0;do{g=false;for(var i in YB){if(i.HD()){g=true;}}}while(g&& ++h<IC);if(h==IC){print('Possible loop in watchers propagation, stopped dispatch.');}}typedef  JC<CD>();typedef  DD<CD>( value);class KC<CD>{KC();}class YD<CD> extends ZB{YD(g, i, h):super(g,i,h){uE(sE());} tE( g){return sB(rE,g);} uE(g){rE=new List<CD>.from(g);}}class ZD<hB,ED> extends ZB{ZD(g, i, h):super(g,i,h){uE(sE());} tE( g){var i=rE.keys;if(i.length!=g.keys.length)return true;var j=i.iterator;while (j.moveNext()){var h=j.current;if(!g.containsKey(h))return true;if(rE[h]!=g[h])return true;}return false;} uE(g){rE=new Map<hB,ED>.from(g);}}class aD<hB,ED> extends ZB{aD(g, i, h):super(g,i,h){uE(sE());} tE( g){return sB(g.keys,rE.keys)||sB(g.values,rE.values);} uE(g){rE=new kB.LinkedHashMap.from(g);}} sB( i, j){var h=i.iterator;var g=j.iterator;while (h.moveNext()){if(!g.moveNext())return true;if(h.current!=g.current)return true;}return g.moveNext();}class v{final vE;const v.jD(this.vE);toString()=>'Enum.${vE}';static const aB=const v.jD('LIST');static const tB=const v.jD('HASH_MAP');static const uB=const v.jD('ORDERED_MAP');static const FD=const v.jD('OTHER');}//@ sourceMappingURL=simplehangman.html_bootstrap.dart.map
